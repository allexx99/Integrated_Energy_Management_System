#database.ip = ${DB_IP:localhost}
database.ip = ${DB_IP:localhost}
database.port = ${DB_PORT:3306}
database.user = ${DB_USER:root}
database.password = ${DB_PASSWORD:root}
database.name = ${DB_DBNAME:ds2023users}
backend.domain = ${DEVICE_DOMAIN:localhost}

spring.datasource.url = jdbc:mysql://${database.ip}:${database.port}/${database.name}
spring.datasource.username = ${database.user}
spring.datasource.password = ${database.password}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
#spring.jpa.database-platform = org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql= true
server.port= 8080

device_service_url=http://${backend.domain}:8081
#device_service_url=DEVICE_SERVICE_URL

#   JWT TOKEN
application.security.jwt.secret-key= S65H9uRZH6gcrXuphCRByM/xk+HD+3TunT4zUvPSGDZM3+RwIvv89Vs6vh9Idjyj

# 5 min
#application.security.jwt.expiration = 300 000

# 1 day
application.security.jwt.expiration= 86400000

##conection string pentru db
## => host: localhost;
## => port: portul pe care e configurat SQL - 3306 default;
## => numele bazei de date (baza de date trebuie sa existe)
#spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/ds2023users
#
##username si parola din SQL
#spring.datasource.username=root
#spring.datasource.password=root
#
##dialect SQL
#spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
#
##ddl => create (ca sa se poata face tabelele)
##ddl => update (cand nu se mai modifica structura bazei de date si vrem sa pastram datele inserate in tabele
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.MySQL8Dialect
#spring.jpa.properties.hibernate.format_sql= true
#
##daca e nevoie sa schimbati portul pe care ruleaza aplicatia (8080 - port default)
#server.port=8080